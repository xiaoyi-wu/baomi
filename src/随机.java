package 工具;

public class 随机 {

  public 随机() {
    准备();
  }

  public 随机(String 种子) {
    准备(种子);
  }

  public void 准备() {
    准备(System.nanoTime() + "." + System.currentTimeMillis());
  }

  public void 准备(String 种子) {
    byte[] 代码 = 种子.getBytes();
    for (int 甲 = 0; 甲 < 30; 数[甲++] = 0);
    for (int 甲, 乙 = 0; 乙 < 150; 乙++) {
      数[甲 = 乙 % 30] <<= 8;
      if (乙 < 代码.length) 数[甲] |= 代码[乙] & 0xff;
    }
    long 平移 = 0;
    for (int 甲 = 0; 甲 < 30; 甲++) 平移 += 数[甲] = 源[甲].选择(数[甲]);
    for (int 甲 = 0; 甲 < 30; 甲++) 数[甲] = 源[甲].选择((数[甲] + 平移) % 源[甲].周期);
  }

  public double 选择() {
    int 甲 = (int)((数[29] = 源[29].选择(数[29])) % 29);
    return (double)(数[甲] = 源[甲].选择(数[甲])) / 源[甲].周期;
  }

  public long 选择(long 范围) {
    return (long)(选择() * 范围);
  }

  private static class 线性源 {
    线性源(int 系数, int 质数, int 附加) {
      周期 = 质数 * (long)质数 * 质数;
      倍数 = 系数 * 质数 + 1;
      增数 = 附加;
    }
    long 选择(long 数) {
      return (倍数 * 数 + 增数) % 周期;
    }
    final long 周期;
    final int 倍数, 增数;
  }

  private long[] 数 = new long [30];
  private static final 线性源[] 源 = {
    new 线性源(131, 15727, 15991), new 线性源(135, 15731, 16001), new 线性源(133, 15733, 16007),
    new 线性源(132, 15737, 16033), new 线性源(138, 15739, 16057), new 线性源(136, 15749, 16061),
    new 线性源(134, 15761, 16063), new 线性源(132, 15767, 16067), new 线性源(134, 15773, 16069),
    new 线性源(148, 15787, 16073), new 线性源(131, 15791, 16087), new 线性源(139, 15797, 16091),
    new 线性源(136, 15803, 16097), new 线性源(133, 15809, 16103), new 线性源(136, 15817, 16111),
    new 线性源(130, 15823, 16127), new 线性源(135, 15859, 16139), new 线性源(138, 15877, 16141),
    new 线性源(130, 15881, 16183), new 线性源(130, 15887, 16187), new 线性源(139, 15889, 16189),
    new 线性源(141, 15901, 16193), new 线性源(134, 15907, 16217), new 线性源(132, 15913, 16223),
    new 线性源(136, 15919, 16229), new 线性源(135, 15923, 16231), new 线性源(135, 15937, 16249),
    new 线性源(142, 15959, 16253), new 线性源(135, 15971, 16267), new 线性源(136, 15973, 16273)};
}
